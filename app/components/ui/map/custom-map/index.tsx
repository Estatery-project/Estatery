'use client'

import { GoogleMapsProvider } from '@ubilabs/google-maps-react-hooks'
import { useState, useRef, useEffect, useCallback } from 'react'
import {
    MarkerClusterer,
    SuperClusterAlgorithm,
} from '@googlemaps/markerclusterer'

type Tree = [string, number, number]

let trees: Tree[] = [
    ['Baku', 40.409264, 49.867092],
    ['Austin', 30.267153, -97.743061],
    ['Boulder', 40.014984, -105.270546],
    ['Chicago', 41.878114, -87.629798],
    ['Los Angeles', 34.052234, -118.243685],
    ['Miami', 25.761681, -80.191788],
    ['New York', 40.712784, -74.005941],
    ['San Francisco', 37.774929, -122.419416],
    ['Seattle', 47.606209, -122.332071],
    ['Washington DC', 38.907192, -77.036871],
]

const mapOptions = {
    zoom: 10,
    center: { lat: 40.409264, lng: 49.867092 },
}

const MapComponent = () => {
    const [mapContainer, setMapContainer] = useState(null)
    const onLoad = useCallback((map: any) => addMarkers(map), [])

    return (
        <GoogleMapsProvider
            googleMapsAPIKey="AIzaSyB4wwjaaE2gCMFpsVYErvg1kh-LxE-4v3o"
            mapOptions={mapOptions}
            mapContainer={mapContainer}
            onLoadMap={onLoad}
        >
            <div
                ref={(node: any) => setMapContainer(node)}
                style={{
                    height: '90vh',
                    width: '700px',
                    // margin: '1rem 0',
                }}
            />
        </GoogleMapsProvider>
    )
}

function addMarkers(map: any) {
    const markers = trees.map(([name, lat, lng]) => {
        const marker = new google.maps.Marker({ position: { lat, lng } })

        return marker
    })

    new MarkerClusterer({
        markers,
        map,
        algorithm: new SuperClusterAlgorithm({ radius: 200 }),
    })
}
// function addMarkers(map) {
//     const infoWindow = new google.maps.InfoWindow()

//     const markers = trees.map(
//         ([
//             name,
//             img,
//             slug2,
//             lat,
//             lng,
//             city,
//             region,
//             area,
//             room,
//             price,
//             currencyValue,
//             currencySymbol,
//         ]) => {
//             const marker = new google.maps.Marker({
//                 position: { lat, lng },
//                 icon: {
//                     url:
//                         'data:image/svg+xml;charset=UTF-8,' +
//                         encodeURIComponent(/* ... */),
//                     scaledSize: new google.maps.Size(50, 50),
//                 },
//             })

//             marker.addListener('click', () => {
//                 infoWindow.setPosition({ lat, lng })
//                 infoWindow.setContent(`

// <a href=${`estates/${slug2
//                     .toString()
//                     .replace(
//                         'propertydetailpage',
//                         slug2 === 'propertydetailpage' ? 'item-1' : 'item'
//                     )}`}>  <div class="info-window">
//    <img src=${img}  style="width: 190px; height:118px; object-fit:cover"/>
//               <div class="info-window_container">
//                  <h3>${price * currencyValue.toFixed(2)}${currencySymbol}</h3>
//                  <p><span><svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
//                  <path fill-rule="evenodd" clip-rule="evenodd" d="M2.71094 6.50807C2.71094 3.6503 4.98886 1.32031 7.8151 1.32031C10.6413 1.32031 12.9193 3.6503 12.9193 6.50807C12.9193 7.88771 12.5261 9.36909 11.831 10.6489C11.1368 11.9271 10.1226 13.0379 8.85374 13.6309C8.1946 13.939 7.43561 13.939 6.77647 13.6309C5.50765 13.0379 4.49338 11.9271 3.79918 10.6489C3.10412 9.36909 2.71094 7.88771 2.71094 6.50807ZM7.8151 2.19531C5.48669 2.19531 3.58594 4.11884 3.58594 6.50807C3.58594 7.73136 3.93747 9.07014 4.5681 10.2313C5.19958 11.394 6.09195 12.3451 7.14698 12.8382C7.5713 13.0366 8.05891 13.0366 8.48323 12.8382C9.53826 12.3451 10.4306 11.394 11.0621 10.2313C11.6927 9.07014 12.0443 7.73136 12.0443 6.50807C12.0443 4.11884 10.1435 2.19531 7.8151 2.19531ZM7.8151 5.11198C7.09023 5.11198 6.5026 5.69961 6.5026 6.42448C6.5026 7.14935 7.09023 7.73698 7.8151 7.73698C8.53998 7.73698 9.1276 7.14935 9.1276 6.42448C9.1276 5.69961 8.53998 5.11198 7.8151 5.11198ZM5.6276 6.42448C5.6276 5.21636 6.60698 4.23698 7.8151 4.23698C9.02323 4.23698 10.0026 5.21636 10.0026 6.42448C10.0026 7.6326 9.02323 8.61198 7.8151 8.61198C6.60698 8.61198 5.6276 7.6326 5.6276 6.42448Z" fill="#434343"/>
//                  </svg>
//                  </span> <span>${city + ' '}/${' ' + region}</span> </span>

//                    <div class="info-window_detailcontainer">

//                     <p>
//                      <span><svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg">
//                      <path fill-rule="evenodd" clip-rule="evenodd" d="M4.99762 2.08984L6.41678 2.08984C6.41666 2.08984 6.4169 2.08984 6.41678 2.08984C6.4169 2.08984 6.4174 2.08984 6.41752 2.08984H7.81219C7.81208 2.08984 7.81229 2.08984 7.81219 2.08984C7.81229 2.08984 7.81271 2.08984 7.81281 2.08984H9.20761C9.20752 2.08984 9.20769 2.08984 9.20761 2.08984C9.20769 2.08984 9.20801 2.08984 9.20809 2.08984L10.8536 2.08984C11.165 2.08984 11.4249 2.08983 11.6353 2.11123C11.8555 2.13363 12.0599 2.18234 12.244 2.30541C12.3837 2.39873 12.5036 2.51864 12.5969 2.6583C12.72 2.84249 12.7687 3.04684 12.7911 3.26706C12.8125 3.47745 12.8125 3.73733 12.8125 4.04877V4.08441C12.8125 4.39585 12.8125 4.65573 12.7911 4.86611C12.7687 5.08633 12.72 5.29069 12.5969 5.47488C12.5036 5.61454 12.3837 5.73445 12.244 5.82777C12.0599 5.95084 11.8555 5.99954 11.6353 6.02194C11.4249 6.04335 11.165 6.04334 10.8536 6.04333L7.34738 6.04333C7.11826 6.04333 6.98152 6.04407 6.88351 6.05725C6.8386 6.06329 6.8161 6.0704 6.80597 6.07457C6.80363 6.07553 6.80208 6.07629 6.80118 6.07676L6.80005 6.0774L6.79941 6.07853C6.79894 6.07943 6.79819 6.08097 6.79723 6.08332C6.79306 6.09345 6.78594 6.11594 6.77991 6.16085C6.76673 6.25886 6.76599 6.39561 6.76599 6.62473L6.76599 10.1309C6.766 10.4424 6.766 10.7022 6.7446 10.9126C6.7222 11.1328 6.67349 11.3372 6.55043 11.5214C6.45711 11.661 6.33719 11.781 6.19753 11.8743C6.01335 11.9973 5.80899 12.0461 5.58877 12.0685C5.37838 12.0899 5.11851 12.0899 4.80707 12.0898H4.77142C4.45998 12.0899 4.20011 12.0899 3.98972 12.0685C3.7695 12.0461 3.56514 11.9973 3.38096 11.8743C3.2413 11.781 3.12138 11.661 3.02806 11.5214C2.905 11.3372 2.85629 11.1328 2.83389 10.9126C2.81249 10.7022 2.81249 10.4424 2.8125 10.1309L2.8125 4.27496C2.81249 3.85706 2.81248 3.50859 2.84967 3.23195C2.88893 2.93995 2.97529 2.67632 3.18713 2.46448C3.39898 2.25263 3.66261 2.16627 3.9546 2.12701C4.23125 2.08982 4.57972 2.08983 4.99762 2.08984ZM3.51018 6.04333H4.55669C4.74934 6.04333 4.90552 5.88715 4.90552 5.6945C4.90552 5.50184 4.74934 5.34566 4.55669 5.34566H3.51018V4.29915C3.51018 3.85077 3.51092 3.54958 3.54112 3.32491C3.56998 3.11028 3.61985 3.01842 3.68046 2.95781C3.74107 2.89719 3.83293 2.84732 4.04757 2.81847C4.27224 2.78826 4.57343 2.78752 5.0218 2.78752H6.06831L6.06831 3.83403C6.06831 4.02669 6.22449 4.18287 6.41715 4.18287C6.60981 4.18287 6.76599 4.02669 6.76599 3.83403L6.76599 2.78752H7.46366V3.36891C7.46366 3.56157 7.61984 3.71775 7.8125 3.71775C8.00516 3.71775 8.16134 3.56157 8.16134 3.36891V2.78752H8.85901V3.83403C8.85901 4.02669 9.01519 4.18287 9.20785 4.18287C9.40051 4.18287 9.55669 4.02669 9.55669 3.83403V2.78752H10.2544V3.36891C10.2544 3.56157 10.4105 3.71775 10.6032 3.71775C10.7959 3.71775 10.952 3.56157 10.952 3.36891V2.78757C11.223 2.78787 11.4144 2.79004 11.5647 2.80532C11.7297 2.82212 11.806 2.8518 11.8564 2.8855C11.9199 2.92792 11.9744 2.98243 12.0168 3.04591C12.0505 3.09635 12.0802 3.17262 12.097 3.33767C12.1144 3.50856 12.1148 3.73271 12.1148 4.06659C12.1148 4.40047 12.1144 4.62462 12.097 4.79551C12.0802 4.96056 12.0505 5.03683 12.0168 5.08727C11.9744 5.15075 11.9199 5.20526 11.8564 5.24768C11.806 5.28138 11.7297 5.31106 11.5647 5.32785C11.3938 5.34524 11.1696 5.34566 10.8358 5.34566H7.34738C7.34043 5.34566 7.33349 5.34566 7.32657 5.34566C7.12526 5.34563 6.94069 5.34561 6.79054 5.3658C6.6252 5.38803 6.45045 5.44033 6.30672 5.58406C6.16298 5.72779 6.11068 5.90255 6.08845 6.06789C6.06827 6.21803 6.06829 6.40261 6.06831 6.60392C6.06831 6.61083 6.06831 6.61777 6.06831 6.62473V10.1131C6.06831 10.447 6.06789 10.6711 6.05051 10.842C6.03372 11.0071 6.00404 11.0833 5.97033 11.1338C5.92791 11.1973 5.87341 11.2518 5.80993 11.2942C5.75948 11.3279 5.68322 11.3576 5.51816 11.3744C5.34728 11.3917 5.12312 11.3922 4.78925 11.3922C4.45537 11.3922 4.23121 11.3917 4.06033 11.3744C3.89527 11.3576 3.81901 11.3279 3.76856 11.2942C3.70508 11.2518 3.65058 11.1973 3.60816 11.1338C3.57445 11.0833 3.54477 11.0071 3.52798 10.842C3.5127 10.6918 3.51052 10.5003 3.51022 10.2294H4.09157C4.28423 10.2294 4.44041 10.0732 4.44041 9.88054C4.44041 9.68788 4.28423 9.5317 4.09157 9.5317H3.51018V8.83403L4.55669 8.83403C4.74934 8.83403 4.90552 8.67785 4.90552 8.48519C4.90552 8.29254 4.74934 8.13636 4.55669 8.13636H3.51018V7.43868H4.09157C4.28423 7.43868 4.44041 7.2825 4.44041 7.08984C4.44041 6.89719 4.28423 6.74101 4.09157 6.74101H3.51018V6.04333Z" fill="#434343"/>
//                      </svg>

//                      </span> <span>${area}m2</span>
//                      </p>

//                      <p>
//                      <span><svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
//                      <g clip-path="url(#clip0_784_21854)">
//                      <path fill-rule="evenodd" clip-rule="evenodd" d="M7.19365 1.98438H8.42614C9.49817 1.98437 10.3473 1.98436 11.0118 2.0737C11.6957 2.16565 12.2493 2.35939 12.6858 2.79593C13.1224 3.23248 13.3161 3.78603 13.4081 4.46995C13.4964 5.12664 13.4974 5.96359 13.4974 7.01777C13.698 7.18328 13.8573 7.39665 13.9586 7.64132C14.0288 7.81071 14.056 7.98544 14.0686 8.17041C14.0807 8.3481 14.0807 8.56454 14.0807 8.82381V8.85328C14.0807 9.11254 14.0807 9.32898 14.0686 9.50667C14.056 9.69165 14.0288 9.86637 13.9586 10.0358C13.7958 10.4288 13.4835 10.7411 13.0905 10.9039C12.9211 10.9741 12.7463 11.0013 12.5614 11.0139C12.4907 11.0187 12.4139 11.0217 12.3307 11.0234V11.7552C12.3307 11.9968 12.1349 12.1927 11.8932 12.1927C11.6516 12.1927 11.4557 11.9968 11.4557 11.7552V11.026H4.16406V11.7552C4.16406 11.9968 3.96819 12.1927 3.72656 12.1927C3.48494 12.1927 3.28906 11.9968 3.28906 11.7552V11.0234C3.20589 11.0217 3.1291 11.0187 3.05843 11.0139C2.87346 11.0013 2.69874 10.9741 2.52934 10.9039C2.13628 10.7411 1.82399 10.4288 1.66117 10.0358C1.59101 9.86637 1.5638 9.69165 1.55118 9.50667C1.53905 9.32898 1.53906 9.11254 1.53906 8.85327V8.82381C1.53906 8.56454 1.53905 8.3481 1.55118 8.17041C1.5638 7.98544 1.59101 7.81071 1.66117 7.64132C1.76252 7.39665 1.92178 7.18327 2.1224 7.01777C2.1224 5.96359 2.12343 5.12664 2.21172 4.46995C2.30367 3.78603 2.49741 3.23248 2.93395 2.79593C3.3705 2.35939 3.92405 2.16565 4.60797 2.0737C5.27251 1.98436 6.12163 1.98437 7.19365 1.98438ZM2.99762 6.6679C3.01777 6.66612 3.03804 6.66455 3.05843 6.66316C3.2053 6.65314 3.37863 6.6514 3.58073 6.6511L3.58073 6.18321C3.58071 5.6591 3.5807 5.22205 3.62734 4.8751C3.67658 4.50888 3.78489 4.17825 4.05058 3.91256C4.31627 3.64687 4.6469 3.53856 5.01312 3.48932C5.36007 3.44268 5.79712 3.44269 6.32123 3.44271H9.29856C9.82268 3.44269 10.2597 3.44268 10.6067 3.48932C10.9729 3.53856 11.3035 3.64687 11.5692 3.91256C11.8349 4.17825 11.9432 4.50888 11.9924 4.8751C12.0391 5.22205 12.0391 5.6591 12.0391 6.18321V6.6511C12.2412 6.6514 12.4145 6.65314 12.5614 6.66316C12.5818 6.66455 12.602 6.66612 12.6222 6.6679C12.6208 5.77257 12.6109 5.10752 12.5409 4.58654C12.462 3.99965 12.314 3.66152 12.0671 3.41465C11.8202 3.16778 11.4821 3.01981 10.8952 2.9409C10.2958 2.8603 9.50554 2.85938 8.39323 2.85938H7.22656C6.11425 2.85938 5.32403 2.8603 4.72456 2.9409C4.13767 3.01981 3.79955 3.16778 3.55267 3.41465C3.3058 3.66152 3.15783 3.99965 3.07892 4.58654C3.00888 5.10752 2.99901 5.77257 2.99762 6.6679ZM11.1641 6.65104V6.21354C11.1641 5.6512 11.1631 5.27346 11.1253 4.99169C11.0891 4.7225 11.0265 4.60729 10.9505 4.53128C10.8745 4.45526 10.7593 4.39271 10.4901 4.35652C10.2083 4.31864 9.83057 4.31771 9.26823 4.31771H8.2474V6.65104H11.1641ZM7.3724 6.65104V4.31771H6.35156C5.78922 4.31771 5.41148 4.31864 5.12971 4.35652C4.86052 4.39271 4.74532 4.45526 4.6693 4.53128C4.59328 4.60729 4.53073 4.7225 4.49454 4.99169C4.45666 5.27346 4.45573 5.6512 4.45573 6.21354V6.65104H7.3724ZM3.118 7.53613C2.97757 7.54571 2.9092 7.5629 2.86419 7.58155C2.68552 7.65555 2.54357 7.7975 2.46957 7.97617C2.45093 8.02117 2.43373 8.08955 2.42415 8.22998C2.4143 8.37433 2.41406 8.56076 2.41406 8.83854C2.41406 9.11633 2.4143 9.30276 2.42415 9.44711C2.43373 9.58753 2.45093 9.65591 2.46957 9.70092C2.54357 9.87958 2.68552 10.0215 2.86419 10.0955C2.9092 10.1142 2.97757 10.1314 3.118 10.141C3.26235 10.1508 3.44878 10.151 3.72656 10.151H11.8932C12.171 10.151 12.3574 10.1508 12.5018 10.141C12.6422 10.1314 12.7106 10.1142 12.7556 10.0955C12.9343 10.0215 13.0762 9.87958 13.1502 9.70092C13.1689 9.65591 13.1861 9.58753 13.1956 9.44711C13.2055 9.30276 13.2057 9.11633 13.2057 8.83854C13.2057 8.56076 13.2055 8.37433 13.1956 8.22998C13.1861 8.08955 13.1689 8.02117 13.1502 7.97617C13.0762 7.7975 12.9343 7.65555 12.7556 7.58155C12.7106 7.5629 12.6422 7.54571 12.5018 7.53613C12.3574 7.52628 12.171 7.52604 11.8932 7.52604H3.72656C3.44878 7.52604 3.26235 7.52628 3.118 7.53613Z" fill="#434343"/>
//                      </g>
//                      <defs>
//                      <clipPath id="clip0_784_21854">
//                      <rect width="14" height="14" fill="white" transform="translate(0.8125 0.0898438)"/>
//                      </clipPath>
//                      </defs>
//                      </svg>

//                      </span> <span>${room}</span>
//                      </p>

//                    </div>
//               </div>
//             </div></a>

//             `)
//                 infoWindow.open({ map })
//             })

//             // Create the 200-meter radius circle
//             const radiusCircle = new google.maps.Circle({
//                 center: { lat, lng },
//                 radius: 200,
//                 fillColor: '#00B5B1',
//                 fillOpacity: 0.2,
//                 strokeColor: '#00B5B1',
//                 strokeOpacity: 0.8,
//                 strokeWeight: 2,
//                 map,
//                 zIndex: marker.getZIndex() - 1, // Set zIndex beneath the marker
//             })

//             return { marker, radiusCircle }
//         }
//     )

//     const clusterStyles = [
//         {
//             url: 'path/to/custom-cluster-icon-1.png',
//             width: 50,
//             height: 50,
//             textColor: '#000',
//             textSize: 16,
//         },
//     ]

//     new MarkerClusterer({
//         markers: markers.map((item) => item.marker),
//         map,
//         algorithm: new SuperClusterAlgorithm({ radius: 200 }),
//         renderer: {
//             render: ({ count, position }) =>
//                 new google.maps.Marker({
//                     label: {
//                         text: String(count),
//                         color: 'white',
//                         fontSize: '20px',
//                     },
//                     position,
//                     icon: {
//                         url:
//                             'data:image/svg+xml;charset=UTF-8,' +
//                             encodeURIComponent(`
//           <svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg">
//           <style>
//               @keyframes pulse {
//                   0% { transform: scale(1); }
//                   30% { transform: scale(1.1); }
//                   100% { transform: scale(1); }
//               }
//           </style>
//           <circle cx="250" cy="250" r="200" fill="#21759F"/>
//           <circle cx="250" cy="250" r="200" fill="none" stroke="#21759F" stroke-width="18">
//               <animate attributeName="r" values="200;240;200" dur="1s" repeatCount="indefinite"/>
//           </circle>
//       </svg>
//         `),
//                         scaledSize: new google.maps.Size(50, 50),
//                     },
//                     zIndex: Number(google.maps.Marker.MAX_ZINDEX) + count,
//                 }),
//         },
//         styles: clusterStyles,
//     })

//     new MarkerClusterer({
//         markers: markers.map((item) => item.radiusCircle),
//         map,
//         algorithm: new SuperClusterAlgorithm({ radius: 200 }),
//         renderer: {
//             render: ({ count, position }) =>
//                 new google.maps.Circle({
//                     center: position,
//                     radius: 400,
//                     fillColor: '#21759F',
//                     fillOpacity: 0.2,
//                     strokeColor: '#21759F',
//                     strokeOpacity: 0.8,
//                     strokeWeight: 18,
//                     zIndex: Number(google.maps.Marker.MAX_ZINDEX) + count,
//                 }),
//         },
//         styles: clusterStyles,
//     })
// }

export default MapComponent
